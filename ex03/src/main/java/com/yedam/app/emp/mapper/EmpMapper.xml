<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.yedam.app.emp.mapper.EmpMapper">
	<!-- 전체조회 -->
	<select id="selectEmpAllList" resultType="EmpVO">
	<!-- c_id(nono list)  => getCId : 컬럼을 마이바티스가 cid로 읽음/ 대문자 다음 소문자 한 글자라도 있어야함 -->
		SELECT  employee_id,
				first_name,
				last_name,
				email,
				phone_number,
				hire_date,
				job_id,
				salary,
				commission_pct,
				manager_id,
				department_id
		FROM employees
		ORDER BY employee_id DESC
	</select>

	
	<!-- 단건조회 -->
	<select id="selectEmpInfo" resultType="EmpVO">
		SELECT  employee_id,
					first_name,
					last_name,
					email,
					phone_number,
					hire_date,
					job_id,
					salary,
					commission_pct,
					manager_id,
					department_id
			FROM employees
			WHERE employee_id = #{ employeeId }
			<!-- #{} : PreparedStatement	0 -> 0, Kang -> 'Kang' / 값을 넘길때는 #으로 넘겨야함
			  	 ${} : Statement		  	0 -> 0, Kang -> Kang   -->
	</select>
		


	<!-- 등록 -->
	<insert id="insertEmpInfo" parameterType="EmpVO">
		<selectKey keyProperty="employeeId" resultType="int" order="BEFORE">
			SELECT NVL(MAX(employee_id),0) + 1 <!-- "int"이므로 정수로만 반환받아야함 -->
			FROM employees
		</selectKey>
		INSERT INTO employees
				( employee_id
				, first_name
				, last_name
				, email
				, hire_date
				, job_id
				, salary
				)
				VALUES
				( 
				   #{employeeId}
				 , #{firstName}
				 , #{lastName}
				 , #{email}
				 <choose>
					 <when test="hireDate != null"> <!-- date타입은 equals 불가 null여부만 확인 -->
					 	, #{hireDate}
					 </when>
					 <otherwise>
					 	, sysdate
					 </otherwise>
				 </choose>
<!-- 				 <if test="hireDate != null"> if 태그 두개 true or false/ 혹은 if-else와 같이 choose를 사용 -->
<!-- 				, hire_date -->
<!-- 				</if> -->
<!-- 				<if test="hireDate == null"> -->
<!-- 				, sysdate -->
<!-- 				</if> -->
				 , #{jobId}
				 , #{salary}
				)
	</insert>	
	
	<!-- 수정 : 사원의 급여를 정해진 비율로 인상 -->
	<update id="updateEmpSal">
		UPDATE employees
		SET salary = salary * (1 + #{raise} / 100) <!-- empMapper param에 붙은 값 가져오기 -->
		WHERE employee_id = #{emp.employeeId}
	</update>
	
	<!-- 수정 : 사원의 정보를 수정 -->
	<!-- 1) 모든 항목에 업데이트 진행, 전제조건 : 모든 항목에 정보가 존재 -->
	<!-- 2) Mybatis -> Dynamic SQL 사용 -->
	<!-- where 절과 sql문을 융합, set절과 where절을 태그형태로 작성 -->
		<update id="updateInfo" parameterType="EmpVO">
			UPDATE employees
			<set>
				<if test="firstName != null and !firstName.equals('')">
					first_name = #{firstName},
				</if>
				<if test="email != null and !email.equals('')">
					email = #{email},
				</if>
				<if test="salary != null and !salary.equals('')">
					salary = #{salary},
				</if>
			</set>
			WHERE employee_id = #{employeeId}
		</update>

	<!-- 삭제 -->	
	<delete id="deleteEmpInfo" parameterType="int">
	<!--@ param anotation 기반으로 #{}속 이름 쓰기 -->
		DELETE FROM employees
		WHERE employee_id = #{empId}
	
	</delete>



	
	


</mapper>
  