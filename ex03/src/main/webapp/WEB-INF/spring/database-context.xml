<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:property-placeholder
		location="classpath:config/db.properties" />

	<!-- 순차적을 읽으므로 순서 바꾸지마 -->
	<!-- datasource connection pool -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="${driver}" />
		<property name="jdbcUrl" value="${url}" />
		<property name="username" value="${userid}" />
		<property name="password" value="${userpwd}" />
	</bean>

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>

	<!-- mybatis가 실제로 작동 -->
	<!-- hikari cp를 이용해서 db연결해주는 mybatis -->
	<!-- mybatis SqlSessionFactory -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:config/mybatis-config.xml" />
		<property name="mapperLocations"
			value="classpath*:com/yedam/app/**/mapper/*Mapper.xml" /><!-- build되며 
			정확하게 읽기위해 classpath에 *를 붙이기 -->
	</bean>

	<mybatis-spring:scan
		base-package="com.yedam.app.**.mapper" />

	<!-- TransactionManager bean 등록 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- @Transactional 어노테이션 처리 -->
	<tx:annotation-driven
		transaction-manager="transactionManager" />












</beans>
